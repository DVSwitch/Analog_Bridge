; ysf.ini
; Analog_Bridge configuration file.
;   This file should be placed in either /etc or it can be
;   supplied as a path on the Analog_Bridge command line.

; The best way to think of this file is that there are two main sections, the USRP (analog audio) and
; AMBE_AUDIO (compressed audio).  Analog_Bridge will take everything sent to the USRP port and
; encode it for transmission on the AMBE_AUDIO port.  The encoder will use the format defined in ambeMode.
; As you might expect, the reverse direction is defined too.

include =  macro.ini

; General Section describes settings for Analog_Bridge itself.
[GENERAL]
logLevel = 1                            ; Show messages and above 0=No logging, 1=Debug, 2=Message, 3=Info, 4=Warning, 5=Error, 6=Fatal

; Metadata management
subscriberFile = /var/lib/dvswitch/subscriber_ids.csv   ; DMR ID to callsign lookup data
exportMetadata = true					; Export metadata to USRP partner (transcode setups require this)

; General vocoder setup information
decoderFallBack = true                  ; Allow software AMBE decoding if a hardware decoder is not found
useEmulator = true                     ; Use the MD380 AMBE emulator for AMBE72 (DMR/YSFN/NXDN)
emulatorAddress = 127.0.0.1:2470        ; IP address and port of the md380 server

mute = OFF			; OFF, USRP, TLV, BOTH (Do not export to) (Mute the interface)

; Information for xx_Bridge (Where xx is MMDVM, Quantar, HB, IPSC)
[AMBE_AUDIO]

; YSF
ambeMode = YSFN                 ; DMR, DMR_IPSC, DSTAR, NXDN, P25, YSFN, YSFW
address = 127.0.0.1             ; IP address of xx_Bridge
RXPort = 35100                  ; Port to send AMBE TLV frames to (export)
TXPort = 35103                  ; Port to listen on (import)
minTxTimeMS = 2000              ; Minimum time in MS for hang delay (0-10000)
gatewayDmrId = 3112138          ; ID to use when transmitting from Analog_Bridge
repeaterID = 311213852          ; ID of source repeater
txTg = 3166                     ; TG to use for all frames sent from Analog_Bridge -> xx_Bridge
txTs = 2                        ; Slot to use for frames sent from Analog_Bridge -> xx_Bridge
colorCode = 1                   ; Color Code to assign DMR frames
;; FallbackID = 1234567           ; In case we can not find a valid DMR id in the database, export this one
;; ExportTG = 1234                ; Which TG to export

; Information for USRP channel driver.  This interface uses PCM to transfer audio information
; There are two typical configurations, ASL and Transcode.  ASL (AllstarLink) is for analog clients connected
; to a digital network.  Transcode is when Analog_Bridge actually points its PCM interfaces back at itself, 
; causing a TLV <-- (pcm <--> pcm) --> TLV type of architecture.
;   When using ASL, this matches the rpt.conf ASL file with a setting like:
;   rxchannel = usrp/127.0.0.1:34001:32001
;   When Transcoding, make two ini files and set txPort equal to the other instance rxPort (crossover).  Launch
;   each instance with its own ini file.
[USRP]
address = 169.254.42.42                 ; IP address of USRP partner (Allstar/Asterisk or another Analog_Bridge)
txPort = 12345                          ; Transmit USRP frames on this port
rxPort = 12345                          ; Listen for USRP frames on this port
aslAudio = AUDIO_USE_GAIN               ; Audio to ASL (AUDIO_UNITY, AUDIO_USE_AGC, AUDIO_USE_GAIN)
agcGain = 6                             ; Gain (in db) of the AGC filter
dmrAudio = AUDIO_USE_GAIN               ; Audio from ASL (AUDIO_UNITY, AUDIO_USE_GAIN, AUDIO_BPF)
dmrGain = 0.50                          ; Gain factor of audio from ASL (0.0-1.0)

[MACROS]

; Where the macros are
; xxxx=yyyy
; xxxx is the dial string to match
; yyyy is the command line to execute

; xxxx must be preceded by a *
; xxxx can be any string (alphanumeric)
; yyyy is the command to execute
; yyyy will replace xxxx in the dial string
; arguments follow the macro name with a # delimiter

; For example using macro "5678" above would look like:
; *5678#9876

; Which would invoke:
; echo 9876

; disconnect 

; Mode off
73 = /usr/local/sbin/tune.sh ysf "disconnect"

; mode local
74 = /usr/local/sbin/tune.sh ysf "disconnect"

; North America
76 = /usr/local/sbin/tune.sh ysf "dvswitch.org:42000"

# Parrot Connect
342565 = /usr/local/sbin/tune.sh ysf "127.0.0.1:42012"

# Parrot Disconnect
142565 = /usr/local/sbin/tune.sh ysf "disconnect"

; Information for DV3000 hardware decoder
;   There are two configuration modes: IP (AMBEServer) and serial (direct connect hardware)
;   Use top server and port if using AMBEServer
;   Use bottom server/port and serial = true if using the DV3000u (thumbdv)
;   Did you run AMBETest4.py before using this?
[DV3000]
; address = 127.0.0.1                     ; IP address of AMBEServer
; rxPort = 2460                           ; Port of AMBEServer
address = /dev/ttyUSB0                 ; Device of DV3000U on this machine
baud = 460800                          ; Baud rate of the dongle (230400 or 460800)
serial = true                          ; Use serial=true for direct connect or serial=false for AMBEServer

